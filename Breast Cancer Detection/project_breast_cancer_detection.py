# -*- coding: utf-8 -*-
"""Project-Breast cancer Detection

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1uC9jMWHM4SleWF4M4-TYkGz4p135AucN
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

#Load Dataset
from sklearn.datasets import load_breast_cancer
cancer_dataset=load_breast_cancer()

cancer_dataset

type(cancer_dataset)

cancer_dataset.keys()

#maligant or benign value
cancer_dataset['target']

#Creating DataFrame
df=pd.DataFrame(np.c_[cancer_dataset['data'],cancer_dataset['target']],
                columns=np.append(cancer_dataset['feature_names'],['target']))

df.head(3)

list(df.columns)

df.shape

df.info()

#checking whether the dataset is balanced or not
true_count=len(df.loc[df['target']==True])
false_count=len(df.loc[df['target']==False])
(true_count,false_count)

sns.pairplot(df,hue='target',vars=['mean radius','mean texture','mean perimeter','mean area','mean smoothness'])

sns.countplot(df['target'])

X=df.drop('target',axis=1)
Y=df['target']

# train test split
from sklearn.model_selection import train_test_split
X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.3,random_state=34)

"""**Feature Scaling**"""

from sklearn.preprocessing import StandardScaler
sc=StandardScaler()
X_train_sc=sc.fit_transform(X_train)
X_test_sc=sc.fit_transform(X_test)

from sklearn.metrics import confusion_matrix,accuracy_score,classification_report

from sklearn.svm import SVC
model=SVC()
model.fit(X_train_sc,Y_train)
Y_pred=model.predict(X_test_sc)

#checking the accuracy of the model
accuracy_score(Y_test,Y_pred)

confusion_matrix(Y_test,Y_pred)

print(classification_report(Y_test,Y_pred))

#cross validation of the ML model(whether the model is underfit or overfit)
from sklearn.model_selection import  cross_val_score
cross_validation=cross_val_score(estimator=model,X=X_train_sc,y=Y_train,cv=5)
print("cross validation mean accuracy of the  model  is = ",cross_validation.mean())

# saving the model using pickle
import pickle
#save model
pickle.dump(model,open('breast_cancer_detection.pickle','wb'))
#load model
breast_cancer_detection_model=pickle.load(open('breast_cancer_detection.pickle','rb'))

